// Vitest Snapshot v1

exports[`convert > getElement > \\n이 여러 개 있을 때 1`] = `
{
  "left": {
    "children": [
      {
        "type": "text",
        "value": "abc",
      },
    ],
    "tagName": "span1",
    "type": "element",
  },
  "reachedNewline": true,
  "right": {
    "children": [
      {
        "type": "text",
        "value": "def",
      },
      {
        "children": [
          {
            "type": "text",
            "value": "ghi
jkl",
          },
        ],
        "tagName": "span2",
        "type": "element",
      },
    ],
    "tagName": "span1",
    "type": "element",
  },
}
`;

exports[`convert > getElement > children 내에 
이 없을 때 1`] = `
{
  "node": {
    "children": [
      {
        "type": "text",
        "value": "abc",
      },
      {
        "type": "text",
        "value": "dev",
      },
    ],
    "tagName": "span",
    "type": "element",
  },
  "reachedNewline": false,
}
`;

exports[`convert > getElement > children 이 없을 떄 1`] = `
{
  "node": {
    "children": [],
    "tagName": "span",
    "type": "element",
  },
  "reachedNewline": false,
}
`;

exports[`convert > getElement > element 안에 \\n 이 포함된 Text 가 있을 떄 제대로 동작해야 함 1`] = `
{
  "left": {
    "children": [
      {
        "type": "text",
        "value": "abc",
      },
      {
        "type": "text",
        "value": "def",
      },
    ],
    "tagName": "span",
    "type": "element",
  },
  "reachedNewline": true,
  "right": {
    "children": [
      {
        "type": "text",
        "value": "ghi",
      },
      {
        "type": "text",
        "value": "jkl",
      },
    ],
    "tagName": "span",
    "type": "element",
  },
}
`;

exports[`convert > getElement > 중첩되었을 떄 마지막에 \\n이 있을 때 1`] = `
{
  "left": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "type": "text",
                "value": "abcdef",
              },
            ],
            "tagName": "span3",
            "type": "element",
          },
        ],
        "tagName": "span2",
        "type": "element",
      },
    ],
    "tagName": "span1",
    "type": "element",
  },
  "reachedNewline": true,
  "right": null,
}
`;

exports[`convert > getElement > 중첩된 경우 1`] = `
{
  "left": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "type": "text",
                "value": "abc",
              },
            ],
            "tagName": "span3",
            "type": "element",
          },
        ],
        "tagName": "span2",
        "type": "element",
      },
    ],
    "tagName": "span1",
    "type": "element",
  },
  "reachedNewline": true,
  "right": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "type": "text",
                "value": "def",
              },
            ],
            "tagName": "span3",
            "type": "element",
          },
        ],
        "tagName": "span2",
        "type": "element",
      },
    ],
    "tagName": "span1",
    "type": "element",
  },
}
`;

exports[`convert > getLines > 제대로 동작해야 함 1`] = `
[
  [
    {
      "children": [
        {
          "type": "text",
          "value": "let",
        },
      ],
      "properties": {
        "className": [
          "token",
          "keyword",
        ],
      },
      "tagName": "span",
      "type": "element",
    },
    {
      "type": "text",
      "value": " a ",
    },
    {
      "children": [
        {
          "type": "text",
          "value": "=",
        },
      ],
      "properties": {
        "className": [
          "token",
          "operator",
        ],
      },
      "tagName": "span",
      "type": "element",
    },
    {
      "type": "text",
      "value": " ",
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "\`",
            },
          ],
          "properties": {
            "className": [
              "token",
              "template-punctuation",
              "string",
            ],
          },
          "tagName": "span",
          "type": "element",
        },
      ],
      "properties": {
        "className": [
          "token",
          "template-string",
        ],
      },
      "tagName": "span",
      "type": "element",
    },
  ],
  [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "   sdkfj",
            },
          ],
          "properties": {
            "className": [
              "token",
              "string",
            ],
          },
          "tagName": "span",
          "type": "element",
        },
      ],
      "properties": {
        "className": [
          "token",
          "template-string",
        ],
      },
      "tagName": "span",
      "type": "element",
    },
  ],
  [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "\`",
            },
          ],
          "properties": {
            "className": [
              "token",
              "template-punctuation",
              "string",
            ],
          },
          "tagName": "span",
          "type": "element",
        },
      ],
      "properties": {
        "className": [
          "token",
          "template-string",
        ],
      },
      "tagName": "span",
      "type": "element",
    },
    {
      "children": [
        {
          "type": "text",
          "value": ";",
        },
      ],
      "properties": {
        "className": [
          "token",
          "punctuation",
        ],
      },
      "tagName": "span",
      "type": "element",
    },
  ],
]
`;

exports[`convert > getText > \\n이 뒤에 있을 때 잘 분리되어야 함 1`] = `
{
  "left": {
    "type": "text",
    "value": "abcdef",
  },
  "reachedNewline": true,
  "right": null,
}
`;

exports[`convert > getText > \\n이 앞에 있을 때 잘 분리되어야 함 1`] = `
{
  "left": null,
  "reachedNewline": true,
  "right": {
    "type": "text",
    "value": "def",
  },
}
`;

exports[`convert > getText > \\n이 없을 때는 그대로 리턴되어야 함 1`] = `
{
  "node": {
    "type": "text",
    "value": "abcdef",
  },
  "reachedNewline": false,
}
`;

exports[`convert > getText > \\n이 있을 때 잘 분리되어야 함 1`] = `
{
  "left": {
    "type": "text",
    "value": "abc",
  },
  "reachedNewline": true,
  "right": {
    "type": "text",
    "value": "def",
  },
}
`;

exports[`convert > unifyLine > text, element가 섞여 있을 경우 통일되어야 함 1`] = `
{
  "children": [
    {
      "children": [
        {
          "text": "hi",
          "type": "TEXT",
        },
      ],
      "properties": {
        "className": [
          "token text-wrapper",
        ],
      },
      "tagName": "span",
      "type": "CODE_ELEMENT",
    },
    {
      "children": [
        {
          "text": "my name is",
          "type": "TEXT",
        },
      ],
      "tagName": "span",
      "type": "CODE_ELEMENT",
    },
    {
      "children": [
        {
          "text": "taehoon",
          "type": "TEXT",
        },
      ],
      "properties": {
        "className": [
          "token text-wrapper",
        ],
      },
      "tagName": "span",
      "type": "CODE_ELEMENT",
    },
  ],
  "type": "CODE_LINE",
}
`;
