{
  "overrides": [
    {
      "files": ["**/*.mdx"],
      "parser": "eslint-mdx",
      "extends": ["plugin:mdx/recommended", "prettier"],
      "globals": {
        "CH": "readonly"
      }
    },
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.mjs"],
      "plugins": ["@typescript-eslint"],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "next/core-web-vitals",
        "prettier"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.eslint.json"
      },
      "rules": {
        // const PostList: MonnomlogPage<IPostListProps> = (props) => { ... } 와 같이 썼을 때
        // props 에 타입이 없다고 오진하고 에러를 발생시킴.
        "react/prop-types": "off",
        "no-unused-vars": "off",

        "jsx-a11y/label-has-associated-control": [
          2,
          {
            // "labelComponents": ["CustomInputLabel"],
            // "labelAttributes": ["label"],
            "controlComponents": [
              /* "CustomInput"*/ "input",
              "select",
              "textarea"
            ],
            "depth": 3
          }
        ],

        "object-shorthand": "error",

        "@typescript-eslint/no-unused-vars": [
          "error",
          { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_" }
        ],

        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I[A-Z]",
              "match": true
            }
          }
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports"
          }
        ],

        "@typescript-eslint/switch-exhaustiveness-check": "error",

        "@next/next/no-img-element": "off",

        "react-hooks/exhaustive-deps": [
          "warn",
          {
            "additionalHooks": "(useMyStoreMemo|useMyOtherCustomHook)"
          }
        ],

        "react/jsx-key": ["error", { "checkFragmentShorthand": true }]
      }
    }
  ],

  "ignorePatterns": [
    "node_modules",
    ".next",
    "out",
    "vitest.config.ts",
    "next-sitemap.config.js"
  ]
}
